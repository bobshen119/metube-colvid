{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { isDevMode } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { CookieService } from 'ngx-cookie-service';\nimport { AppComponent } from './app.component';\nimport { MeTubeSocket } from './metube-socket';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/service-worker\";\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {\n    static {\n      this.ɵfac = function AppModule_Factory(t) {\n        return new (t || AppModule)();\n      };\n    }\n    static {\n      this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n        type: AppModule,\n        bootstrap: [AppComponent]\n      });\n    }\n    static {\n      this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n        providers: [CookieService, MeTubeSocket],\n        imports: [BrowserModule, FormsModule, NgbModule, HttpClientModule, FontAwesomeModule, NgSelectModule, ServiceWorkerModule.register('custom-service-worker.js', {\n          enabled: !isDevMode(),\n          // Register the ServiceWorker as soon as the application is stable\n          // or after 30 seconds (whichever comes first).\n          registrationStrategy: 'registerWhenStable:30000'\n        })]\n      });\n    }\n  }\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}